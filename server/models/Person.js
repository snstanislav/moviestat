/**
 * @file Person.js
 * @description Mongoose schema and model for persons.
 * @author Stanislav Snisar
 * @version 1.0.0
 * @module models/Person
 * @requires mongoose - MongoDB ODM for Node.js
 */

const mongoose = require("mongoose");

/**
 * Mongoose schema for person documents (cast and crew members).
 * 
 * @typedef {Object} PersonSchema
 * 
 * @property {string} tmdbID - The Movie Database (TMDB) unique identifier
 * @property {string} imdbID - Internet Movie Database (IMDb) unique identifier
 * @property {string} name - Full name of the person
 * @property {string} birthday - Date of birth
 * @property {string} placeOfBirth - Birthplace location
 * @property {number} gender - Gender code
 * @property {string} photo - URL to profile photo
 * @property {string} biography - Biographical information
 * 
 * @property {Date} createdAt - Auto-generated by timestamps option, immutable after creation
 * @property {Date} updatedAt - Auto-generated and auto-updated by timestamps option
 * 
 * @description Schema for storing information about individuals in the entertainment industry.
 *   Used as a referenced document by Movie schema for cast and crew relationships.
 *   Normalizes person data to avoid duplication across multiple movies.
 * 
 * @example
 * // Updating person's biography
 * await Person.findOneAndUpdate(
 *   { tmdbID: "287" },
 *   { biography: "Updated biography text..." },
 *   { new: true }
 * );
 */
const personSchema = new mongoose.Schema({
    tmdbID: { type: String, required: true },
    imdbID: { type: String, required: true },
    name: { type: String, required: true },
    birthday: String,
    placeOfBirth: String,
    gender: Number,
    photo: String,
    biography: String
}, { timestamps: true });

module.exports.personSchema = personSchema;
module.exports.Person = mongoose.model("Person", personSchema, "persons");